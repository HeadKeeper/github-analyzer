version '0.0.1'

buildscript {
    ext {
        // kotlin
        kotlinVersion = '1.2.71'
        kotlinLoggingVersion = '1.5.3'
        // db
        h2DriverVersion = '1.4.197'
        exposedVersion = '0.10.5'
        // logger
        log4jVersion = "1.7.9"
        loggerVersion = "1.2.3"
        // apollo
        apolloVersion = "1.0.0-alpha2"
    }
    repositories {
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { setUrl("https://dl.bintray.com/kotlin/exposed") }
    }
    dependencies {
        // kotlin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
        // h2
        classpath "com.h2database:h2:${h2DriverVersion}"
        // apollo-android
        classpath "com.apollographql.apollo:apollo-gradle-plugin:${apolloVersion}"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-noarg'
apply plugin: 'com.apollographql.android'
apply plugin: 'idea'

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/java'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.2"
        languageVersion = "1.2"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.2"
        languageVersion = "1.2"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}

repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { setUrl("https://dl.bintray.com/kotlin/exposed") }
}

dependencies {
    // kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"

    // h2 driver
    compile "com.h2database:h2:${h2DriverVersion}"

    // exposed sql client
    compile "org.jetbrains.exposed:exposed:${exposedVersion}"

    // apollo
    compile "com.apollographql.apollo:apollo-runtime:${apolloVersion}"

    // logger
    compile "org.slf4j:slf4j-api:${log4jVersion}"
    compile "ch.qos.logback:logback-core:${loggerVersion}"
    compile "ch.qos.logback:logback-classic:${loggerVersion}"
}

task runApplication(type: JavaExec) {
    group 'application'
    main = 'by.bsuir.headkeepers.githubanalyzer.GithubAnalyzerApplication'
    classpath = sourceSets.main.runtimeClasspath
}